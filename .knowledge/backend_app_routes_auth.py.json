{"is_source_file": true, "format": "Python", "description": "This file defines authentication-related API endpoints using Flask, including user registration and login functionalities. It also includes schema definitions for input validation and JWT token handling.", "external_files": ["app.models", "flask.views", "flask_smorest", "werkzeug.security", "flask_jwt_extended", "marshmallow"], "external_methods": ["generate_password_hash", "check_password_hash", "create_access_token", "User.query.filter_by", "blp.abort"], "published": ["blp"], "classes": [{"name": "RegisterSchema", "description": "Schema for user registration input validation, requiring email and password fields."}, {"name": "LoginSchema", "description": "Schema for user login input validation, requiring email and password fields."}, {"name": "TokenSchema", "description": "Schema for JWT token response."}, {"name": "Register", "description": "Flask view handling user registration endpoint."}, {"name": "Login", "description": "Flask view handling user login endpoint."}], "methods": [{"name": "get_user_by_email(email)", "description": "Retrieves a user object from the database by email.", "scope": "", "scopeKind": ""}, {"name": "post(self, login_data)", "description": "Handles the POST request for registration and login endpoints, creating JWT tokens upon success.", "scope": "Login", "scopeKind": "class"}, {"name": "post(self, reg_data)", "scope": "Register", "scopeKind": "class", "description": "unavailable"}], "calls": ["generate_password_hash", "check_password_hash", "create_access_token", "User.query.filter_by", "db.session.add", "db.session.commit", "blp.abort"], "search-terms": ["auth", "JWT", "register", "login", "flask_smorest", "MethodView", "auth endpoints"], "state": 2, "file_id": 8, "knowledge_revision": 30, "git_revision": "04b1e99f33f61cc60a4b4e2904af5dc3bfab3463", "revision_history": [{"20": ""}, {"30": "04b1e99f33f61cc60a4b4e2904af5dc3bfab3463"}], "ctags": [{"_type": "tag", "name": "Login", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class Login(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginSchema", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class LoginSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class Register(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RegisterSchema", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class RegisterSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenSchema", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class TokenSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    access_token = fields.String(description=\"JWT token\")$/", "language": "Python", "kind": "variable", "scope": "TokenSchema", "scopeKind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True)$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"User email\")$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^def get_user_by_email(email):$/", "language": "Python", "kind": "function", "signature": "(email)"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True)$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True, validate=validate.Length(min=6))$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    def post(self, login_data):$/", "language": "Python", "kind": "member", "signature": "(self, login_data)", "scope": "Login", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    def post(self, reg_data):$/", "language": "Python", "kind": "member", "signature": "(self, reg_data)", "scope": "Register", "scopeKind": "class"}], "hash": "545a9557e0d3211fa638e286fea14a51", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/routes/auth.py", "fields": [{"name": "access_token = fields.String(description=\"JWT token\")", "scope": "TokenSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "email = fields.Email(required=True)", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "email = fields.Email(required=True, description=\"User email\")", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(required=True, load_only=True)", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(required=True, load_only=True, validate=validate.Length(min=6))", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}]}