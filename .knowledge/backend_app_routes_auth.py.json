{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for user authentication using Flask. It includes schemas for registration and login, functions for user retrieval, and route classes for handling registration and login requests, issuing JWT tokens upon successful authentication.", "external_files": ["flask.views", "flask_smorest", "flask", "werkzeug.security", "flask_jwt_extended", "app.models", "marshmallow"], "external_methods": ["create_access_token", "generate_password_hash", "check_password_hash"], "published": ["blp"], "classes": [{"name": "RegisterSchema", "description": "Schema for user registration data, including email and password."}, {"name": "LoginSchema", "description": "Schema for user login data, including email and password."}, {"name": "TokenSchema", "description": "Schema for JWT token response."}, {"name": "Register", "description": "Flask MethodView for user registration endpoint."}, {"name": "Login", "description": "Flask MethodView for user login endpoint."}], "methods": [{"name": "get_user_by_email(email)", "description": "Helper function to retrieve a user record by email.", "scope": "", "scopeKind": ""}, {"name": "post(self, login_data)", "scope": "Login", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, reg_data)", "scope": "Register", "scopeKind": "class", "description": "unavailable"}], "calls": ["create_access_token", "generate_password_hash", "check_password_hash", "User.query.filter_by", "db.session.add", "db.session.commit"], "search-terms": ["auth", "JWT", "register", "login", "password hashing", "Flask authentication"], "state": 2, "file_id": 8, "knowledge_revision": 20, "git_revision": "", "ctags": [{"_type": "tag", "name": "Login", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class Login(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginSchema", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class LoginSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class Register(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RegisterSchema", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class RegisterSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenSchema", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^class TokenSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    access_token = fields.String(description=\"JWT token\")$/", "language": "Python", "kind": "variable", "scope": "TokenSchema", "scopeKind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True)$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"User email\")$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^def get_user_by_email(email):$/", "language": "Python", "kind": "function", "signature": "(email)"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True)$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True, validate=validate.Length(min=6))$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    def post(self, login_data):$/", "language": "Python", "kind": "member", "signature": "(self, login_data)", "scope": "Login", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/pronet-connect-127616-127626/backend/app/routes/auth.py", "pattern": "/^    def post(self, reg_data):$/", "language": "Python", "kind": "member", "signature": "(self, reg_data)", "scope": "Register", "scopeKind": "class"}], "hash": "736247e5f40002b323cbe4046ba545de", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/routes/auth.py", "fields": [{"name": "access_token = fields.String(description=\"JWT token\")", "scope": "TokenSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "email = fields.Email(required=True)", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "email = fields.Email(required=True, description=\"User email\")", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(required=True, load_only=True)", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(required=True, load_only=True, validate=validate.Length(min=6))", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"20": ""}]}